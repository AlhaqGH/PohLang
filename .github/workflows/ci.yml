name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build and Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            runtime/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('runtime/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check formatting
        working-directory: runtime
        run: cargo fmt --all -- --check
        continue-on-error: true

      - name: Run clippy
        working-directory: runtime
        run: cargo clippy --all-targets --all-features -- -D warnings
        continue-on-error: true

      - name: Build runtime (debug)
        working-directory: runtime
        run: cargo build --verbose

      - name: Run tests
        working-directory: runtime
        run: cargo test --verbose --all

      - name: Build runtime (release)
        working-directory: runtime
        run: cargo build --release --verbose

      - name: Test release binary
        shell: bash
        working-directory: runtime
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            ./target/release/pohlang.exe --version
          else
            ./target/release/pohlang --version
          fi

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: pohlang-${{ matrix.os }}
          path: |
            runtime/target/release/pohlang${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          retention-days: 7
