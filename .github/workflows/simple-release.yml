name: Simple Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v0.5.2)'
        required: true
        type: string

jobs:
  build-and-release:
    name: Build and Release (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            binary: pohlang
            platform: linux-x64
            ext: tar.gz
          - os: windows-latest
            binary: pohlang.exe
            platform: windows-x64
            ext: zip
          - os: macos-latest
            binary: pohlang
            platform: macos-x64
            ext: tar.gz
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract tag
        id: tag
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build
        working-directory: runtime
        run: cargo build --release --verbose

      - name: Test
        working-directory: runtime
        run: cargo test --verbose

      - name: Package Linux/macOS
        if: matrix.os != 'windows-latest'
        working-directory: runtime
        run: |
          ASSET_NAME="pohlang-${{ steps.tag.outputs.tag }}-${{ matrix.platform }}.${{ matrix.ext }}"
          tar czf "../${ASSET_NAME}" -C target/release ${{ matrix.binary }}
          echo "ASSET_NAME=${ASSET_NAME}" >> $GITHUB_ENV

      - name: Package Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        working-directory: runtime
        run: |
          $AssetName = "pohlang-${{ steps.tag.outputs.tag }}-${{ matrix.platform }}.${{ matrix.ext }}"
          Compress-Archive -Path target/release/${{ matrix.binary }} -DestinationPath "..\${AssetName}"
          echo "ASSET_NAME=${AssetName}" >> $env:GITHUB_ENV

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          files: ${{ env.ASSET_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
